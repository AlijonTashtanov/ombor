<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Buyurtmani tahrirlash</title>

    <!-- Google Font: Source Sans Pro -->
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback"
    />
    <!-- Font Awesome -->
    <link rel="stylesheet" href="plugins/fontawesome-free/css/all.min.css" />
    <!-- Ionicons -->
    <link
      rel="stylesheet"
      href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css"
    />
    <!-- Tempusdominus Bootstrap 4 -->
    <link
      rel="stylesheet"
      href="plugins/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.min.css"
    />
    <!-- iCheck -->
    <link
      rel="stylesheet"
      href="plugins/icheck-bootstrap/icheck-bootstrap.min.css"
    />
    <!-- JQVMap -->
    <link rel="stylesheet" href="plugins/jqvmap/jqvmap.min.css" />
    <!-- Theme style -->
    <link rel="stylesheet" href="dist/css/adminlte.min.css?v=3.2.0" />
    <!-- overlayScrollbars -->
    <link
      rel="stylesheet"
      href="plugins/overlayScrollbars/css/OverlayScrollbars.min.css"
    />

    //CDN

    <!-- Font Awesome Icons -->
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"
    />
    <!-- Theme style -->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/admin-lte@3.1/dist/css/adminlte.min.css"
    />
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- AdminLTE App -->
    <script src="https://cdn.jsdelivr.net/npm/admin-lte@3.1/dist/js/adminlte.min.js"></script>

    //CDN
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"
      integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <link rel="stylesheet" href="plugins/daterangepicker/daterangepicker.css" />
    <!-- summernote -->
    <link rel="stylesheet" href="plugins/summernote/summernote-bs4.min.css" />
    <script data-cfasync="false" nonce="c768c475-1d6e-4ab7-9230-7ff56c84a290">
      try {
        (function (w, d) {
          !(function (cJ, cK, cL, cM) {
            if (cJ.zaraz) console.error("zaraz is loaded twice");
            else {
              cJ[cL] = cJ[cL] || {};
              cJ[cL].executed = [];
              cJ.zaraz = { deferred: [], listeners: [] };
              cJ.zaraz._v = "5815";
              cJ.zaraz._n = "c768c475-1d6e-4ab7-9230-7ff56c84a290";
              cJ.zaraz.q = [];
              cJ.zaraz._f = function (cN) {
                return async function () {
                  var cO = Array.prototype.slice.call(arguments);
                  cJ.zaraz.q.push({ m: cN, a: cO });
                };
              };
              for (const cP of ["track", "set", "debug"])
                cJ.zaraz[cP] = cJ.zaraz._f(cP);
              cJ.zaraz.init = () => {
                var cQ = cK.getElementsByTagName(cM)[0],
                  cR = cK.createElement(cM),
                  cS = cK.getElementsByTagName("title")[0];
                cS && (cJ[cL].t = cK.getElementsByTagName("title")[0].text);
                cJ[cL].x = Math.random();
                cJ[cL].w = cJ.screen.width;
                cJ[cL].h = cJ.screen.height;
                cJ[cL].j = cJ.innerHeight;
                cJ[cL].e = cJ.innerWidth;
                cJ[cL].l = cJ.location.href;
                cJ[cL].r = cK.referrer;
                cJ[cL].k = cJ.screen.colorDepth;
                cJ[cL].n = cK.characterSet;
                cJ[cL].o = new Date().getTimezoneOffset();
                if (cJ.dataLayer)
                  for (const cT of Object.entries(
                    Object.entries(dataLayer).reduce(
                      (cU, cV) => ({ ...cU[1], ...cV[1] }),
                      {}
                    )
                  ))
                    zaraz.set(cT[0], cT[1], { scope: "page" });
                cJ[cL].q = [];
                for (; cJ.zaraz.q.length; ) {
                  const cW = cJ.zaraz.q.shift();
                  cJ[cL].q.push(cW);
                }
                cR.defer = !0;
                for (const cX of [localStorage, sessionStorage])
                  Object.keys(cX || {})
                    .filter((cZ) => cZ.startsWith("_zaraz_"))
                    .forEach((cY) => {
                      try {
                        cJ[cL]["z_" + cY.slice(7)] = JSON.parse(cX.getItem(cY));
                      } catch {
                        cJ[cL]["z_" + cY.slice(7)] = cX.getItem(cY);
                      }
                    });
                cR.referrerPolicy = "origin";
                cR.src =
                  "/cdn-cgi/zaraz/s.js?z=" +
                  btoa(encodeURIComponent(JSON.stringify(cJ[cL])));
                cQ.parentNode.insertBefore(cR, cQ);
              };
              ["complete", "interactive"].includes(cK.readyState)
                ? zaraz.init()
                : cJ.addEventListener("DOMContentLoaded", zaraz.init);
            }
          })(w, d, "zarazData", "script");
          window.zaraz._p = async (bb) =>
            new Promise((bc) => {
              if (bb) {
                bb.e &&
                  bb.e.forEach((bd) => {
                    try {
                      const be = d.querySelector("script[nonce]"),
                        bf = be?.nonce || be?.getAttribute("nonce"),
                        bg = d.createElement("script");
                      bf && (bg.nonce = bf);
                      bg.innerHTML = bd;
                      bg.onload = () => {
                        d.head.removeChild(bg);
                      };
                      d.head.appendChild(bg);
                    } catch (bh) {
                      console.error(`Error executing script: ${bd}\n`, bh);
                    }
                  });
                Promise.allSettled(
                  (bb.f || []).map((bi) => fetch(bi[0], bi[1]))
                );
              }
              bc();
            });
          zaraz._p({ e: ["(function(w,d){})(window,document)"] });
        })(window, document);
      } catch (e) {
        throw (fetch("/cdn-cgi/zaraz/t"), e);
      }
    </script>
    <style>
      .select-box {
        width: 200px;
        display: inline-block;
        margin-right: 10px; /* Optional: Adds spacing between selects */
        height: 25px;
      }
    </style>
  </head>
  <body class="hold-transition sidebar-mini layout-fixed">
    <div class="wrapper">
      <!-- Preloader -->
      <div
        class="preloader flex-column justify-content-center align-items-center"
      >
        <img
          class="animation__shake"
          src="dist/img/AdminLTELogo.png"
          alt="AdminLTELogo"
          height="60"
          width="60"
        />
      </div>

      <!-- Navbar -->
      <%- include('../partials/header.ejs') %>
      <!-- /.navbar -->

      <!-- Main Sidebar Container -->
      <%- include('../partials/sidebar') %>
      <!-- Content Wrapper. Contains page content -->
      <div class="content-wrapper">
        <!-- Content Header (Page header) -->
        <div class="content-header">
          <div class="container-fluid">
            <div class="row mb-2">
              <!-- /.col -->
              <div class="col-sm-6"></div>
              <!-- /.col -->
            </div>
            <!-- /.row -->
          </div>
          <!-- /.container-fluid -->
        </div>
        <!-- /.content-header -->

        <!-- Main content -->
        <section class="content">
          <div class="container-fluid">
            <div class="row">
              <div class="col-md-6">
                <div
                  class="card card-primary card-outline card-tabs"
                  style="height: 356px"
                >
                  <div class="card-header p-0 pt-1 border-bottom-0"></div>
                  <div class="card-body" style="padding: 20px 40px">
                    <div class="tab-content" id="custom-tabs-three-tabContent">
                      <div
                        class="tab-pane fade show active"
                        id="uzbek"
                        role="tabpanel"
                        aria-labelledby="uzbek-tab"
                      >
                        <div>
                          <div class="form-group">
                            <label for="name">KATEGORIYA</label>
                            <select
                              id="status"
                              name="category"
                              class="form-control custom-select"
                            >
                              <option value="">Tanlang</option>
                              <% categories.forEach(category => { %>
                              <option value="<%= category.ID %>">
                                <%= category.NAME %>
                              </option>
                              <% }) %>
                            </select>
                          </div>
                          <div class="form-group">
                            <label for="type">TURI</label>
                            <select
                              id="type"
                              name="type"
                              class="form-control custom-select"
                            ></select>
                          </div>

                          <div class="form-group">
                            <label for="name">BRANDI</label>
                            <select
                              id="brand"
                              name="brand"
                              class="form-control custom-select"
                            ></select>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              <div class="col-md-6">
                <div class="card card-primary card-outline card-tabs">
                  <div class="card-body" style="padding: 20px 40px">
                    <form action="" method="post" id="orderForm">
                      <div class="form-group">
                        <label for="status">BUYURTMA TURI</label>
                        <select
                          id="order_type"
                          name="order_type"
                          class="form-control custom-select"
                        >
                          <option value="1">Asosiy vosita</option>

                          <option value="2">Savdo</option>
                        </select>
                      </div>
                      <div class="form-group">
                        <label for="status">MAXSULOT</label>
                        <select
                          id="products"
                          name="products"
                          class="form-control custom-select"
                        >
                          <option selected="" disabled=""></option>
                        </select>
                      </div>
                      <div class="form-group">
                        <label for="qty">MIQDORI</label>
                        <input
                          type="number"
                          name="qty"
                          class="form-control custom-input"
                        />
                      </div>
                      <div class="form-group">
                        <button
                          type="submit"
                          class="btn btn-success float-right"
                        >
                          Qo'shish
                        </button>
                        <a href="/orders" class="btn btn-secondary">Qaytish</a>
                      </div>
                    </form>
                  </div>
                </div>
              </div>
              <div class="col-md-12">
                <div class="card-outline card card-primary">
                  <div class="card-header"></div>
                  <div class="card-body">
                    <div class="setting-index">
                      <div
                        id="w0"
                        class="grid-view is-bs4 kv-grid-bs4 hide-resize"
                        data-krajee-grid="kvGridInit_987ebbd7"
                        data-krajee-ps="ps_w0_container"
                      >
                        <div
                          id="w0-container"
                          class="table-responsive kv-grid-container"
                        >
                          <form action="/save-order" method="post">
                            <table
                              class="kv-grid-table table table-bordered table-striped kv-table-wrap"
                            >
                              <thead>
                                <tr>
                                  <th>MAXSULOT</th>
                                  <th>SANA</th>
                                  <th>FILIAL</th>
                                  <th>BUYURTMA TURI</th>
                                  <th>STATUS</th>
                                  <th>SUMMA</th>
                                  <th>MIQDORI</th>
                                  <th>YARATDI</th>
                                  <th>HARAKATLAR</th>
                                </tr>
                              </thead>
                              <tbody id="product-list">
                                <% if (order_items.length > 0) { %> <%
                                order_items.forEach(row => { %>
                                <tr>
                                  <td>
                                    <%= row.PRODUCT_NAME %> <%=
                                    row.PRODUCT_MODEL %>
                                  </td>
                                  <td>
                                    <%= new
                                    Date(row.CREATED_AT).toLocaleString('en-GB',
                                    { year: 'numeric', month: '2-digit', day:
                                    '2-digit', hour: '2-digit', minute:
                                    '2-digit', hour12: false }).replace(',', '')
                                    %>
                                  </td>

                                  <td><%= row.BRANCH_NAME %></td>
                                  <td><%= row.ORDER_TYPE_NAME %></td>
                                  <td><%= row.STATUS %></td>
                                  <td><%= row.USD %></td>

                                  <td><%= row.QUANTITY %></td>
                                  <td><%= row.USER_FIO %></td>
                                  <td>
                                    <!-- <a
                                    href="/show-brand/<%= row.ID %>"
                                    class="btn btn-info"
                                  >
                                    <i class="fas fa-eye"></i>
                                  </a> -->
                                    <a
                                      href="/re-edit-order/<%= row.ID %>"
                                      class="btn btn-warning"
                                    >
                                      <i class="fas fa-pen"></i>
                                    </a>
                                    <form
                                      action="/destroy-order_item/<%= row.ID %>"
                                      method="POST"
                                      style="display: inline"
                                    >
                                      <input
                                        type="hidden"
                                        name="order_id"
                                        value="<%= row.ORDER_ID %>"
                                      />
                                      <a
                                        href="javascript:void(0);"
                                        class="btn btn-outline-danger"
                                        onclick="this.closest('form').submit(); return confirm('O`chirilsinmi?')"
                                      >
                                        <i class="fas fa-trash"></i>
                                      </a>
                                    </form>
                                  </td>
                                </tr>
                                <% }) %> <% } else { %>
                                <tr>
                                  <td colspan="11">No data available</td>
                                </tr>
                                <% } %>
                              </tbody>
                            </table>
                          </form>
                        </div>
                      </div>
                    </div>
                  </div>

                  <div class="card-header"></div>
                  <div class="card-body">
                    <div class="setting-index">
                      <div
                        id="w0"
                        class="grid-view is-bs4 kv-grid-bs4 hide-resize"
                        data-krajee-grid="kvGridInit_987ebbd7"
                        data-krajee-ps="ps_w0_container"
                      >
                        <div
                          id="w0-container"
                          class="table-responsive kv-grid-container"
                        >
                          <form
                            action="/save-updated-order/<%= orderId %>"
                            method="post"
                          >
                            <table
                              class="kv-grid-table table table-bordered table-striped kv-table-wrap"
                            >
                              <thead>
                                <tr>
                                  <th>MAXSULOT</th>

                                  <th>BUYURTMA TURI</th>
                                  <th>STATUS</th>
                                  <th>SUMMA</th>
                                  <th>MIQDORI</th>

                                  <th>HARAKATLAR</th>
                                </tr>
                              </thead>
                              <tbody id="table-list"></tbody>
                              <div class="text-right" style="margin: 5px">
                                <button type="submit" class="btn btn-success">
                                  Yuborish
                                </button>
                              </div>
                            </table>
                          </form>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </section>
        <!-- /.content -->
      </div>
      <!-- /.content-wrapper -->
      <!-- <%- include('../partials/footer') %> -->
      <!-- Control Sidebar -->
      <aside class="control-sidebar control-sidebar-dark">
        <!-- Control sidebar content goes here -->
      </aside>
      <!-- /.control-sidebar -->
    </div>
    <!-- ./wrapper -->
    <script>
      $(document).ready(function () {
        // Trigger AJAX request on any change in the selects
        $('[name="category"]').on("change", function () {
          // Collect selected values
          const productCategoryId = $('[name="category"]').val();
          const orderTypeId = $('[name="order_type"]').val();
          // console.log("ayt", orderTypeId);
          const products = $('[name="products"]').val();
          // const productBrandId = $('[name="brand"]').val();

          // Check if all fields are selected before making the request
          if (productCategoryId) {
            $.ajax({
              url: "/add", // Replace with your actual route
              method: "POST", // or 'GET' based on your endpoint configuration
              contentType: "application/json",
              data: JSON.stringify({
                // category_id: categoryId,
                productCategoryId: productCategoryId,
                orderTypeId: orderTypeId,
                // product_brand_id: productBrandId,
              }),
              success: function (response) {
                console.log("random", response);
                // Clear the options in the "MAXSULOT" select box
                const $type = $('#type[name="type"]');
                console.log("shax", type);
                $type.empty();
                // $category.append(
                //   "<option selected disabled>Tanlang</option>"
                // );

                const $brand = $('#brand[name="brand"]');
                $brand.empty();
                // $brand.append("<option selected disabled>Tanlang</option>");
                const $products = $('#products[name="products"]');
                $products.empty();
                // Populate with new options from the response
                if (response) {
                  response.types.forEach((type) => {
                    // console.log("qr", type);
                    $type.append(
                      `<option value="${type.TYPE_ID}">${type.TYPE_NAME}</option>`
                    );
                  });
                } else {
                  $type.append('<option value="">No category found</option>');
                }
                if (response) {
                  response.brands.forEach((brand) => {
                    $brand.append(
                      `<option value="${brand.BRAND_ID}">${brand.BRAND_NAME}</option>`
                    );
                  });
                } else {
                  $maxsulotSelect.append(
                    '<option value="">No category found</option>'
                  );
                }
                if (response) {
                  response.products.forEach((product) => {
                    $products.append(
                      `<option value="${product.ID}"  data-name="${product.NAME} ${product.MODEL}" data-order="${product.ORDER_ID}" data-usd="${product.USD}">${product.NAME} ${product.MODEL}</option>`
                    );
                  });
                } else {
                  $maxsulotSelect.append(
                    '<option value="">No category found</option>'
                  );
                }
              },
              error: function (error) {
                console.error("Error fetching products:", error);
              },
            });
          }
        });
      });

      class Order {
        constructor(orderType, product, qty, productId, usd, order_id) {
          this.orderType = orderType;
          this.product = product;
          this.productId = productId;
          this.order_id = order_id;
          this.usd = usd;
          this.qty = qty;
        }

        render() {
          return `
                   <div class="col-md-12">
                     <p><strong>Order Type:</strong> ${this.orderType}</p>
                     <p><strong>Product:</strong> ${this.productName}</p>
                     <p><strong>Quantity:</strong> ${this.qty}</p>
                          <p><strong>Quantity:</strong> ${this.qty}</p>
                          <p>
                                                             <a href="/show-product/">
                                                                 <span class="btn btn-info">
                                                                     <i class="fas fa-eye"></i>
                                                                 </span>
                                                             </a>
                                                             <a href="/edit-product/">
                                                                 <span class="btn btn-warning">
                                                                     <i class="fas fa-pen"></i>
                                                                 </span>
                                                             </a>
                                                             </a>

                                             <a href="/destroy-product/" class="btn btn-outline-danger" type="submit" onclick="return confirm('Are you sure?')">
                                 <i class="fas fa-trash"></i>
                                             </a>
                                                         </p>
                   </div>
                 `;
        }
        deleteOrder(index) {
          this.orders.splice(index, 1); // Remove the order at the specified index
        }
      }

      // Create an instance of the Order class

      // Call the render method

      // Define an OrdersManager class to handle multiple orders
      class OrdersManager {
        constructor() {
          this.orders = [];
        }

        // Method to add a new order
        addOrder(order) {
          this.orders.push(order);
        }

        // Method to print all orders and then clear the orders
        printOrders() {
          const tablebody = document.getElementById("table-list");
          tablebody.innerHTML = ""; // Clear the table body before re-rendering

          this.orders.forEach((order, index) => {
            console.log("productName", order);

            const orderRow = `
      <tr data-index="${index}">
        <td>
          <input type="text" name="product" value="${order.product}" readonly />
        </td>
    
          <input type="hidden" name="productId" value="${order.productId}" />
               
        <td>
          <input type="text" name="orderType" value="${
            order.orderType == 1
              ? "Asosiy vosita"
              : order.orderType == 2
              ? "Savdo"
              : "Unknown"
          }" readonly />
        </td>
        <td>1</td>
        <td>
          <input type="hidden" name="orderTypeId" value="${order.orderType}" />
          <input type="text" name="usd" value="${order.usd}" readonly />

        </td>
      
        <td>
          <input type="number" name="qty" value="${order.qty}" />
        </td>
    
        <td class="skip-export kv-align-center kv-align-middle w0" style="width:250px;" data-col-seq="6">
          <a href="#" class="btn btn-outline-danger" onclick="deleteOrder(event, ${index})">
            <i class="fas fa-trash"></i>
          </a>
        </td>
      </tr>
    `;

            tablebody.innerHTML += orderRow; // Append the new row to the table body
          });
        }

        // Method to delete an order by index
        deleteOrder(index) {
          // Prevent the default behavior of the link (e.g., page reload)
          this.orders.splice(index, 1); // Remove the order at the specified index
          this.printOrders(); // Re-render the table after deletion
        }
      }
      // Global function to handle deleting an order
      function deleteOrder(event, index) {
        // Prevent the default action of the link (navigation)
        event.preventDefault();

        // Remove the order from the OrdersManager
        ordersManager.deleteOrder(index);

        // Re-render the orders
        ordersManager.printOrders();
      }

      // Initialize the OrdersManager
      const ordersManager = new OrdersManager();

      // Handle form submission
      document
        .getElementById("orderForm")
        .addEventListener("submit", function (event) {
          event.preventDefault(); // Prevent the default form submission

          // Get form values
          const orderType = document.getElementById("order_type").value;

          // Get the selected product ID
          const productId = document.getElementById("products").value;

          // Get the data-name attribute from the selected option in the products select box
          const productName = document
            .getElementById("products")
            .selectedOptions[0].getAttribute("data-name");
          const usd = document
            .getElementById("products")
            .selectedOptions[0].getAttribute("data-usd");

          const order_id = document
            .getElementById("products")
            .selectedOptions[0].getAttribute("data-order");
          // console.log("estetic", usd);
          // Get the quantity value
          const qty = document.querySelector('input[name="qty"]').value;

          // Ensure productName is being correctly assigned
          console.log("Product Name:", productId);

          // Create a new order instance and add it to the orders manager
          const order = new Order(
            orderType,
            productName,
            qty,
            productId,
            usd,
            order_id
          );
          ordersManager.addOrder(order);
          ordersManager.printOrders();

          // Reset the form after submission
          this.reset(); // This will reset the form fields
        });
    </script>
    <!-- jQuery -->
    <script src="plugins/jquery/jquery.min.js"></script>
    <!-- jQuery UI 1.11.4 -->
    <script src="plugins/jquery-ui/jquery-ui.min.js"></script>
    <!-- Resolve conflict in jQuery UI tooltip with Bootstrap tooltip -->
    <script src="plugins/jquery/jquery.min.js"></script>

    <script>
      $.widget.bridge("uibutton", $.ui.button);
    </script>
    <!-- Bootstrap 4 -->
    <script src="plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- ChartJS -->
    <script src="plugins/chart.js/Chart.min.js"></script>
    <!-- Sparkline -->
    <script src="plugins/sparklines/sparkline.js"></script>
    <!-- JQVMap -->
    <script src="plugins/jqvmap/jquery.vmap.min.js"></script>
    <script src="plugins/jqvmap/maps/jquery.vmap.usa.js"></script>
    <!-- jQuery Knob Chart -->
    <script src="plugins/jquery-knob/jquery.knob.min.js"></script>
    <!-- daterangepicker -->
    <script src="plugins/moment/moment.min.js"></script>
    <script src="plugins/daterangepicker/daterangepicker.js"></script>
    <!-- Tempusdominus Bootstrap 4 -->
    <script src="plugins/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"></script>
    <!-- Summernote -->
    <script src="plugins/summernote/summernote-bs4.min.js"></script>
    <!-- overlayScrollbars -->
    <script src="plugins/overlayScrollbars/js/jquery.overlayScrollbars.min.js"></script>
    <!-- AdminLTE App -->
    <script src="dist/js/adminlte.js?v=3.2.0"></script>
    <!-- AdminLTE for demo purposes -->
    <script src="dist/js/demo.js"></script>
    <!-- AdminLTE dashboard demo (This is only for demo purposes) -->
    <script src="dist/js/pages/dashboard.js"></script>
  </body>
</html>
